{
    "PageTitle": "hostcar qinq enable",
    "FuncDef": "The hostcar qinq enable command enables the QinQ hash mode for host CAR.\nThe undo hostcar qinq enable command disables the QinQ hash mode for host CAR.\nBy default, the QinQ hash mode is disabled for host CAR.",
    "CLIs": [
        "hostcar qinq enable",
        "undo hostcar qinq enable"
    ],
    "ParentView": [
        "100GE interface view",
        "10G LAN interface view",
        "10G WAN interface view",
        "40GE interface view",
        "Eth-Trunk interface view",
        "GE optical interface view",
        "GE electrical interface view"
    ],
    "ParaDef": null,
    "Examples": [
        [
            "<HUAWEI> system-view",
            "[~HUAWEI] interface GigabitEthernet 1/0/0",
            "[*HUAWEI-GigabitEthernet1/0/0] hostcar qinq enable"
        ]
    ],
    "ExtraInfo": "Usage Scenario\nWhen an intermediate device, such as a Hub, is installed between users and a device, if the original hash mode is implemented for host CAR, the device is prone to MAC address flapping. To be specific, the original hash mode is implemented based on users' MAC addresses. Attackers can access the intermediate device and forge a great number of MAC addresses to occupy excessive CAR channels during hash operations and exhaust access resources of authorized users. To resolve this problem, run the hostcar qinq enable command to configure the QinQ hash mode for host CAR. QinQ hash can precisely identify various users, suppressing attacks from unauthorized users.\nConfiguration Impact\nIf both direct access and access through the intermediate device exist, after QinQ hash is configured on the device, the device automatically implements the hash operation based on user packets. If a user packet carries a single VLAN tag, the original hash mode is used. If a user packet carries double VLAN tags, the QinQ hash mode is used.\nPrecautions\nIn VS mode, this command is supported only by the admin VS.\nThe hostcar qinq enable command applies only to GE and trunk interfaces."
}